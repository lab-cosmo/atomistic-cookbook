name: Comment on pull request
on:
  workflow_run:
    workflows: ['Documentation']
    types: [completed]

jobs:
  pr_comment:
    if: github.event.workflow_run.event == 'pull_request' && github.event.workflow_run.conclusion == 'success'
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/github-script@v7
        with:
          script: |
            async function insertUpdateComment(owner, repo, issue_number, purpose, body) {
                const {data: comments} = await github.rest.issues.listComments(
                    {owner, repo, issue_number}
                );
                const marker = `<!-- bot: ${purpose} -->`;
                body = marker + "\n" + body;
                const existing = comments.filter((c) => c.body.includes(marker));
                if (existing.length > 0) {
                    const last = existing[existing.length - 1];
                    core.info(`Updating comment ${last.id}`);
                    await github.rest.issues.updateComment({
                        owner, repo,
                        body,
                        comment_id: last.id,
                    });
                } else {
                    core.info(`Creating a comment in issue / PR #${issue_number}`);
                    await github.rest.issues.createComment({issue_number, body, owner, repo});
                }
            }

            const {owner, repo} = context.repo;
            const run_id = ${{github.event.workflow_run.id}};

            // Find the PR with the right sha, see https://github.com/orgs/community/discussions/25220
            const response = await github.rest.search.issuesAndPullRequests({
                q: 'repo:${{ github.repository }} is:pr sha:${{ github.event.workflow_run.head_sha }}',
                per_page: 1,
            })
            const items = response.data.items
            if (items.length < 1) {
                return core.error("No matching pull requests found");
            }
            const pullRequestNumber = items[0].number
            console.info("Pull request number is", pullRequestNumber)

            // get the list of artifacts
            const artifacts = await github.paginate(
                github.rest.actions.listWorkflowRunArtifacts, {owner, repo, run_id}
            );

            if (!artifacts.length) {
                return core.error(`No artifacts found`);
            }

            for (const artifact of artifacts) {
                if (artifact.name == "documentation") {
                    const link = `https://nightly.link/${owner}/${repo}/actions/artifacts/${artifact.id}.zip`

                    let body = `Here is the build version of the cookbook in this pull request: [documentation.zip](${link}), `;
                    body += 'you can view it locally by unzipping `documentation.zip` and open the `index.html` with your favorite browser.';

                    core.info("Review thread message body:", body);
                    await insertUpdateComment(owner, repo, pullRequestNumber, "link-to-documentation", body);

                    return;
                }
            }

            return core.error(`failed to find "documentation" artifact`);
