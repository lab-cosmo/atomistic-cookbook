name: Documentation

on:
  push:
    branches: [main]
    tags: ["*"]
  pull_request:
    # Check all PR
  schedule:
    - cron: '0 8 * * 1' # run every Monday at 8am UTC

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      examplesmatrix: ${{ steps.collectExamples.outputs.examplesjson }}
    steps:
      - uses: actions/checkout@v4
        with:
          # The checkout by default doesn't fetch any history, but for PR
          # we want to check which files have been modified.
          # The action actions/checkout@v4 squashes the history of the PR, 
          # into a single commit so we need to fetch with a depth of 2.
          fetch-depth: ${{ github.event_name == 'pull_request' && 2 || 0 }}

      - id: collectExamples
        # If this is a PR, we collect only examples with modified files
        # Otherwise, we collect all examples
        run: |
          GET_EXAMPLES_ARGS=""
          if ${{ github.event_name == 'pull_request' }}; then
            GET_EXAMPLES_ARGS=" --modified-files $(git diff --name-only -r HEAD^1 HEAD)"
          fi
          echo examplesjson=$(./src/get_examples.py ${GET_EXAMPLES_ARGS}) >> $GITHUB_OUTPUT

  generate-example:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ${{ fromJson(needs.setup.outputs.examplesmatrix) }}

    steps:
      - uses: actions/checkout@v4

      - name: setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: install dependencies
        run: python -m pip install nox docutils

      - name: build example
        run: nox -e ${{ matrix.example-name }}

      - name: store example as a github artifact
        uses: actions/upload-artifact@v4
        with:
          name: example-${{ matrix.example-name }}
          path: docs/src/examples/*  # folders for each example will be merged later
          overwrite: true  # only keep the latest version of the example

  build-and-publish:
    needs: generate-example
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: install dependencies
        run: python -m pip install nox docutils

      - name: load github artifact for each example
        uses: actions/download-artifact@v4
        with:
          path: docs/src/examples
          pattern: example-*
          merge-multiple: true

      - name: build documentation
        run: nox -e build_docs

      - name: store documentation as github artifact to be downloaded by users
        uses: actions/upload-artifact@v4
        with:
          name: documentation
          path: docs/build/html/*
          overwrite: true  # only keep the latest version of the documentation

      - name: put documentation in the website
        run: |
          git clone https://github.com/$GITHUB_REPOSITORY --branch gh-pages gh-pages
          rm -rf gh-pages/.git
          cd gh-pages

          # deploys directly to the root of the website
          rm -rf *
          mv ../docs/build/html/* .

      - name: deploy to gh-pages
        if: github.event_name == 'push'
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./gh-pages/
          force_orphan: true
          cname: atomistic-cookbook.org  
